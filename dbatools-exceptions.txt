5/15/2016 3:33:42 AM
System.Management.Automation.MethodInvocationException: Exception calling "Drop" with "0" argument(s): "Drop failed for JobSchedule 'Daily'. " ---> Microsoft.SqlServer.Management.Smo.FailedOperationException: Drop failed for JobSchedule 'Daily'.  ---> Microsoft.SqlServer.Management.Common.ExecutionFailureException: An exception occurred while executing a Transact-SQL statement or batch. ---> System.Data.SqlClient.SqlException: The schedule was not deleted because it is being used by one or more jobs.
   at Microsoft.SqlServer.Management.Common.ConnectionManager.ExecuteTSql(ExecuteTSqlAction action, Object execObject, DataSet fillDataSet, Boolean catchException)
   at Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteNonQuery(String sqlCommand, ExecutionTypes executionType)
   --- End of inner exception stack trace ---
   at Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteNonQuery(String sqlCommand, ExecutionTypes executionType)
   at Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteNonQuery(StringCollection sqlCommands, ExecutionTypes executionType)
   at Microsoft.SqlServer.Management.Smo.SqlSmoObject.DropImplWorker(Urn& urn, Boolean isDropIfExists)
   at Microsoft.SqlServer.Management.Smo.SqlSmoObject.DropImpl(Boolean isDropIfExists)
   --- End of inner exception stack trace ---
   at Microsoft.SqlServer.Management.Smo.SqlSmoObject.DropImpl(Boolean isDropIfExists)
   at CallSite.Target(Closure , CallSite , Object )
   --- End of inner exception stack trace ---
   at System.Management.Automation.ExceptionHandlingOps.CheckActionPreference(FunctionContext funcContext, Exception exception)
   at System.Management.Automation.Interpreter.ActionCallInstruction`2.Run(InterpretedFrame frame)
   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)
   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)
5/15/2016 3:33:42 AM
System.Management.Automation.MethodInvocationException: Exception calling "Drop" with "0" argument(s): "Drop failed for JobSchedule 'Hourly'. " ---> Microsoft.SqlServer.Management.Smo.FailedOperationException: Drop failed for JobSchedule 'Hourly'.  ---> Microsoft.SqlServer.Management.Common.ExecutionFailureException: An exception occurred while executing a Transact-SQL statement or batch. ---> System.Data.SqlClient.SqlException: The schedule was not deleted because it is being used by one or more jobs.
   at Microsoft.SqlServer.Management.Common.ConnectionManager.ExecuteTSql(ExecuteTSqlAction action, Object execObject, DataSet fillDataSet, Boolean catchException)
   at Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteNonQuery(String sqlCommand, ExecutionTypes executionType)
   --- End of inner exception stack trace ---
   at Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteNonQuery(String sqlCommand, ExecutionTypes executionType)
   at Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteNonQuery(StringCollection sqlCommands, ExecutionTypes executionType)
   at Microsoft.SqlServer.Management.Smo.SqlSmoObject.DropImplWorker(Urn& urn, Boolean isDropIfExists)
   at Microsoft.SqlServer.Management.Smo.SqlSmoObject.DropImpl(Boolean isDropIfExists)
   --- End of inner exception stack trace ---
   at Microsoft.SqlServer.Management.Smo.SqlSmoObject.DropImpl(Boolean isDropIfExists)
   at CallSite.Target(Closure , CallSite , Object )
   --- End of inner exception stack trace ---
   at System.Management.Automation.ExceptionHandlingOps.CheckActionPreference(FunctionContext funcContext, Exception exception)
   at System.Management.Automation.Interpreter.ActionCallInstruction`2.Run(InterpretedFrame frame)
   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)
   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)
5/15/2016 3:33:42 AM
System.Management.Automation.MethodInvocationException: Exception calling "Drop" with "0" argument(s): "Drop failed for JobSchedule 'Replication agent schedule.'. " ---> Microsoft.SqlServer.Management.Smo.FailedOperationException: Drop failed for JobSchedule 'Replication agent schedule.'.  ---> Microsoft.SqlServer.Management.Common.ExecutionFailureException: An exception occurred while executing a Transact-SQL statement or batch. ---> System.Data.SqlClient.SqlException: The schedule was not deleted because it is being used by one or more jobs.
   at Microsoft.SqlServer.Management.Common.ConnectionManager.ExecuteTSql(ExecuteTSqlAction action, Object execObject, DataSet fillDataSet, Boolean catchException)
   at Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteNonQuery(String sqlCommand, ExecutionTypes executionType)
   --- End of inner exception stack trace ---
   at Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteNonQuery(String sqlCommand, ExecutionTypes executionType)
   at Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteNonQuery(StringCollection sqlCommands, ExecutionTypes executionType)
   at Microsoft.SqlServer.Management.Smo.SqlSmoObject.DropImplWorker(Urn& urn, Boolean isDropIfExists)
   at Microsoft.SqlServer.Management.Smo.SqlSmoObject.DropImpl(Boolean isDropIfExists)
   --- End of inner exception stack trace ---
   at Microsoft.SqlServer.Management.Smo.SqlSmoObject.DropImpl(Boolean isDropIfExists)
   at CallSite.Target(Closure , CallSite , Object )
   --- End of inner exception stack trace ---
   at System.Management.Automation.ExceptionHandlingOps.CheckActionPreference(FunctionContext funcContext, Exception exception)
   at lambda_method(Closure , Object[] , StrongBox`1[] , InterpretedFrame )
5/15/2016 3:33:42 AM
System.Management.Automation.MethodInvocationException: Exception calling "Drop" with "0" argument(s): "Drop failed for JobSchedule 'Replication agent schedule.'. " ---> Microsoft.SqlServer.Management.Smo.FailedOperationException: Drop failed for JobSchedule 'Replication agent schedule.'.  ---> Microsoft.SqlServer.Management.Common.ExecutionFailureException: An exception occurred while executing a Transact-SQL statement or batch. ---> System.Data.SqlClient.SqlException: The schedule was not deleted because it is being used by one or more jobs.
   at Microsoft.SqlServer.Management.Common.ConnectionManager.ExecuteTSql(ExecuteTSqlAction action, Object execObject, DataSet fillDataSet, Boolean catchException)
   at Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteNonQuery(String sqlCommand, ExecutionTypes executionType)
   --- End of inner exception stack trace ---
   at Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteNonQuery(String sqlCommand, ExecutionTypes executionType)
   at Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteNonQuery(StringCollection sqlCommands, ExecutionTypes executionType)
   at Microsoft.SqlServer.Management.Smo.SqlSmoObject.DropImplWorker(Urn& urn, Boolean isDropIfExists)
   at Microsoft.SqlServer.Management.Smo.SqlSmoObject.DropImpl(Boolean isDropIfExists)
   --- End of inner exception stack trace ---
   at Microsoft.SqlServer.Management.Smo.SqlSmoObject.DropImpl(Boolean isDropIfExists)
   at CallSite.Target(Closure , CallSite , Object )
   --- End of inner exception stack trace ---
   at System.Management.Automation.ExceptionHandlingOps.CheckActionPreference(FunctionContext funcContext, Exception exception)
   at lambda_method(Closure , Object[] , StrongBox`1[] , InterpretedFrame )
5/15/2016 3:33:42 AM
System.Management.Automation.MethodInvocationException: Exception calling "Drop" with "0" argument(s): "Drop failed for JobSchedule 'Replication agent schedule.'. " ---> Microsoft.SqlServer.Management.Smo.FailedOperationException: Drop failed for JobSchedule 'Replication agent schedule.'.  ---> Microsoft.SqlServer.Management.Common.ExecutionFailureException: An exception occurred while executing a Transact-SQL statement or batch. ---> System.Data.SqlClient.SqlException: The schedule was not deleted because it is being used by one or more jobs.
   at Microsoft.SqlServer.Management.Common.ConnectionManager.ExecuteTSql(ExecuteTSqlAction action, Object execObject, DataSet fillDataSet, Boolean catchException)
   at Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteNonQuery(String sqlCommand, ExecutionTypes executionType)
   --- End of inner exception stack trace ---
   at Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteNonQuery(String sqlCommand, ExecutionTypes executionType)
   at Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteNonQuery(StringCollection sqlCommands, ExecutionTypes executionType)
   at Microsoft.SqlServer.Management.Smo.SqlSmoObject.DropImplWorker(Urn& urn, Boolean isDropIfExists)
   at Microsoft.SqlServer.Management.Smo.SqlSmoObject.DropImpl(Boolean isDropIfExists)
   --- End of inner exception stack trace ---
   at Microsoft.SqlServer.Management.Smo.SqlSmoObject.DropImpl(Boolean isDropIfExists)
   at CallSite.Target(Closure , CallSite , Object )
   --- End of inner exception stack trace ---
   at System.Management.Automation.ExceptionHandlingOps.CheckActionPreference(FunctionContext funcContext, Exception exception)
   at lambda_method(Closure , Object[] , StrongBox`1[] , InterpretedFrame )
5/15/2016 3:33:42 AM
System.Management.Automation.MethodInvocationException: Exception calling "Drop" with "0" argument(s): "Drop failed for JobSchedule 'Replication agent schedule.'. " ---> Microsoft.SqlServer.Management.Smo.FailedOperationException: Drop failed for JobSchedule 'Replication agent schedule.'.  ---> Microsoft.SqlServer.Management.Common.ExecutionFailureException: An exception occurred while executing a Transact-SQL statement or batch. ---> System.Data.SqlClient.SqlException: The schedule was not deleted because it is being used by one or more jobs.
   at Microsoft.SqlServer.Management.Common.ConnectionManager.ExecuteTSql(ExecuteTSqlAction action, Object execObject, DataSet fillDataSet, Boolean catchException)
   at Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteNonQuery(String sqlCommand, ExecutionTypes executionType)
   --- End of inner exception stack trace ---
   at Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteNonQuery(String sqlCommand, ExecutionTypes executionType)
   at Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteNonQuery(StringCollection sqlCommands, ExecutionTypes executionType)
   at Microsoft.SqlServer.Management.Smo.SqlSmoObject.DropImplWorker(Urn& urn, Boolean isDropIfExists)
   at Microsoft.SqlServer.Management.Smo.SqlSmoObject.DropImpl(Boolean isDropIfExists)
   --- End of inner exception stack trace ---
   at Microsoft.SqlServer.Management.Smo.SqlSmoObject.DropImpl(Boolean isDropIfExists)
   at CallSite.Target(Closure , CallSite , Object )
   --- End of inner exception stack trace ---
   at System.Management.Automation.ExceptionHandlingOps.CheckActionPreference(FunctionContext funcContext, Exception exception)
   at lambda_method(Closure , Object[] , StrongBox`1[] , InterpretedFrame )
5/15/2016 3:33:42 AM
System.Management.Automation.MethodInvocationException: Exception calling "Drop" with "0" argument(s): "Drop failed for JobSchedule 'Replication agent schedule.'. " ---> Microsoft.SqlServer.Management.Smo.FailedOperationException: Drop failed for JobSchedule 'Replication agent schedule.'.  ---> Microsoft.SqlServer.Management.Common.ExecutionFailureException: An exception occurred while executing a Transact-SQL statement or batch. ---> System.Data.SqlClient.SqlException: The schedule was not deleted because it is being used by one or more jobs.
   at Microsoft.SqlServer.Management.Common.ConnectionManager.ExecuteTSql(ExecuteTSqlAction action, Object execObject, DataSet fillDataSet, Boolean catchException)
   at Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteNonQuery(String sqlCommand, ExecutionTypes executionType)
   --- End of inner exception stack trace ---
   at Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteNonQuery(String sqlCommand, ExecutionTypes executionType)
   at Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteNonQuery(StringCollection sqlCommands, ExecutionTypes executionType)
   at Microsoft.SqlServer.Management.Smo.SqlSmoObject.DropImplWorker(Urn& urn, Boolean isDropIfExists)
   at Microsoft.SqlServer.Management.Smo.SqlSmoObject.DropImpl(Boolean isDropIfExists)
   --- End of inner exception stack trace ---
   at Microsoft.SqlServer.Management.Smo.SqlSmoObject.DropImpl(Boolean isDropIfExists)
   at CallSite.Target(Closure , CallSite , Object )
   --- End of inner exception stack trace ---
   at System.Management.Automation.ExceptionHandlingOps.CheckActionPreference(FunctionContext funcContext, Exception exception)
   at lambda_method(Closure , Object[] , StrongBox`1[] , InterpretedFrame )
5/15/2016 3:33:42 AM
System.Management.Automation.MethodInvocationException: Exception calling "Drop" with "0" argument(s): "Drop failed for JobSchedule 'Replication agent schedule.'. " ---> Microsoft.SqlServer.Management.Smo.FailedOperationException: Drop failed for JobSchedule 'Replication agent schedule.'.  ---> Microsoft.SqlServer.Management.Common.ExecutionFailureException: An exception occurred while executing a Transact-SQL statement or batch. ---> System.Data.SqlClient.SqlException: The schedule was not deleted because it is being used by one or more jobs.
   at Microsoft.SqlServer.Management.Common.ConnectionManager.ExecuteTSql(ExecuteTSqlAction action, Object execObject, DataSet fillDataSet, Boolean catchException)
   at Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteNonQuery(String sqlCommand, ExecutionTypes executionType)
   --- End of inner exception stack trace ---
   at Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteNonQuery(String sqlCommand, ExecutionTypes executionType)
   at Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteNonQuery(StringCollection sqlCommands, ExecutionTypes executionType)
   at Microsoft.SqlServer.Management.Smo.SqlSmoObject.DropImplWorker(Urn& urn, Boolean isDropIfExists)
   at Microsoft.SqlServer.Management.Smo.SqlSmoObject.DropImpl(Boolean isDropIfExists)
   --- End of inner exception stack trace ---
   at Microsoft.SqlServer.Management.Smo.SqlSmoObject.DropImpl(Boolean isDropIfExists)
   at CallSite.Target(Closure , CallSite , Object )
   --- End of inner exception stack trace ---
   at System.Management.Automation.ExceptionHandlingOps.CheckActionPreference(FunctionContext funcContext, Exception exception)
   at lambda_method(Closure , Object[] , StrongBox`1[] , InterpretedFrame )
5/15/2016 3:33:42 AM
System.Management.Automation.MethodInvocationException: Exception calling "Drop" with "0" argument(s): "Drop failed for JobSchedule 'Replication agent schedule.'. " ---> Microsoft.SqlServer.Management.Smo.FailedOperationException: Drop failed for JobSchedule 'Replication agent schedule.'.  ---> Microsoft.SqlServer.Management.Common.ExecutionFailureException: An exception occurred while executing a Transact-SQL statement or batch. ---> System.Data.SqlClient.SqlException: The schedule was not deleted because it is being used by one or more jobs.
   at Microsoft.SqlServer.Management.Common.ConnectionManager.ExecuteTSql(ExecuteTSqlAction action, Object execObject, DataSet fillDataSet, Boolean catchException)
   at Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteNonQuery(String sqlCommand, ExecutionTypes executionType)
   --- End of inner exception stack trace ---
   at Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteNonQuery(String sqlCommand, ExecutionTypes executionType)
   at Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteNonQuery(StringCollection sqlCommands, ExecutionTypes executionType)
   at Microsoft.SqlServer.Management.Smo.SqlSmoObject.DropImplWorker(Urn& urn, Boolean isDropIfExists)
   at Microsoft.SqlServer.Management.Smo.SqlSmoObject.DropImpl(Boolean isDropIfExists)
   --- End of inner exception stack trace ---
   at Microsoft.SqlServer.Management.Smo.SqlSmoObject.DropImpl(Boolean isDropIfExists)
   at CallSite.Target(Closure , CallSite , Object )
   --- End of inner exception stack trace ---
   at System.Management.Automation.ExceptionHandlingOps.CheckActionPreference(FunctionContext funcContext, Exception exception)
   at lambda_method(Closure , Object[] , StrongBox`1[] , InterpretedFrame )
